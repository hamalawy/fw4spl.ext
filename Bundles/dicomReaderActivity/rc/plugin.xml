<plugin id="dicomReaderActivity">

    <requirement id="servicesReg" />
    <requirement id="gui" />
    <requirement id="guiQt" />
    <requirement id="ctrlSelection" />
    <requirement id="uiVisu" />
    <requirement id="uiVisuQt" />
    <requirement id="visuVTKAdaptor" />
    <requirement id="uiImageQt" />
    <requirement id="media" />
    <requirement id="mediaExt" />
    <requirement id="uiTF" />
    <requirement id="scene2D" />

    <xi:include href="configurations/DicomReader.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/DicomPreview.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/2DLocalPreviewConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

    <extension implements="::fwActivities::registry::Activities">
        <id>DicomReader</id>
        <title>DICOM Reader</title>
        <desc>DICOM Reader activity</desc>
        <icon>Bundles/mediaExt_0-1/icons/icon-DICOM-Reader.svg</icon>
        <requirements>
        </requirements>
        <builder>::fwActivities::builder::ActivitySeries</builder>
        <appConfig id="DicomReader">
        </appConfig>
    </extension>

    <extension implements="::fwServices::registry::ServiceConfig">
        <id>IOSelectorServiceConfigVRRenderExtDicomSeriesDBReader</id>
        <service>::uiIO::editor::IOSelectorService</service>
        <desc>IOSelectorService config for VRRenderExt DicomSeriesDB reader</desc>
        <config>
            <type mode="reader" />
            <selection mode="include" />
            <addSelection service="::ioDicomExt::dcmtk::SDicomSeriesDBReader" />
            <addSelection service="::ioDicomExt::gdcm::SDicomSeriesDBReader" />
            <addSelection service="::ioGdcm::SDicomSeriesDBReader" />
        </config>
    </extension>

</plugin>
